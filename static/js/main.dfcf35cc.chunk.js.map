{"version":3,"sources":["store/index.js","components/ItemForm.js","components/Item.js","components/ItemList.js","components/Todos.js","containers/Todo/index.js","actions/index.js","components/App.js","index.js","reducers/index.js","store/configureStore.prod.js"],"names":["module","exports","require","ItemForm","state","newItem","onSubmit","event","preventDefault","props","editItem","onEditItemSubmited","description","item","completed","onNewItemSubmited","setState","onDescriptionChange","target","value","nextProps","id","this","className","type","placeholder","onChange","Component","Item","onChangeCompleteItem","onToggleComplete","onClickEdit","onEditItem","onClickRemove","onRemoveItem","defaultChecked","style","textDecoration","onClick","href","ItemList","items","map","key","React","Todos","addItem","toggleItemCompletion","dispatch","startEditItem","removeItem","filter","activeEditItemId","connect","todos","actionCreators","Todo","today","Date","options","weekday","month","day","App","toLocaleDateString","ReactDOM","render","store","document","getElementById","combineReducers","action","maxID","Math","max","apply","data","Infinity","createStore","reducers","applyMiddleware","thunk"],"mappings":"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","file":"static/js/main.dfcf35cc.chunk.js","sourcesContent":["if (process.env.NODE_ENV === \"development\") {\r\n  module.exports = require(\"./configureStore.dev\");\r\n} else {\r\n  module.exports = require(\"./configureStore.prod\");\r\n}\r\n","import React, { Component, PropTypes } from \"react\";\r\n\r\nexport default class ItemForm extends Component {\r\n  static propTypes = {\r\n    onNewItemSubmited: PropTypes.func.isRequired,\r\n    editItem: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      description: PropTypes.string.isRequired\r\n    })\r\n  };\r\n  state = {\r\n    newItem: \"\"\r\n  };\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.editItem && nextProps.editItem.id) {\r\n      this.setState({\r\n        newItem: nextProps.editItem.description\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.props.editItem) {\r\n      this.props.onEditItemSubmited({\r\n        ...this.props.editItem,\r\n        description: this.state.newItem\r\n      });\r\n    } else {\r\n      const item = {\r\n        description: this.state.newItem,\r\n        completed: false\r\n      };\r\n      this.props.onNewItemSubmited(item);\r\n    }\r\n\r\n    this.setState({\r\n      newItem: \"\"\r\n    });\r\n  };\r\n\r\n  onDescriptionChange = event => {\r\n    this.setState({\r\n      newItem: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"todo-input-container\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            className=\"todo-input\"\r\n            type=\"text\"\r\n            placeholder=\"Add a to-do...\"\r\n            value={this.state.newItem}\r\n            onChange={this.onDescriptionChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, PropTypes } from \"react\";\r\n\r\nexport default class Item extends Component {\r\n  static propTypes = {\r\n    item: PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      completed: PropTypes.bool.isRequired\r\n    }),\r\n    onEditItem: PropTypes.func.isRequired,\r\n    onToggleComplete: PropTypes.func.isRequired\r\n  };\r\n\r\n  onChangeCompleteItem = event => {\r\n    event.preventDefault();\r\n    this.props.onToggleComplete(this.props.item.id);\r\n  };\r\n\r\n  onClickEdit = event => {\r\n    event.preventDefault();\r\n    this.props.onEditItem(this.props.item.id);\r\n  };\r\n\r\n  onClickRemove = event => {\r\n    event.preventDefault();\r\n    this.props.onRemoveItem(this.props.item.id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fadeIn animated\">\r\n        <li>\r\n          <div className=\"checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              onChange={this.onChangeCompleteItem}\r\n              defaultChecked={this.props.item.completed}\r\n            />\r\n          </div>\r\n\r\n          <div\r\n            className=\"todo\"\r\n            style={{\r\n              textDecoration: this.props.item.completed\r\n                ? \"line-through\"\r\n                : \"none\"\r\n            }}\r\n          >\r\n            {this.props.item.description}\r\n          </div>\r\n\r\n          <div className=\"icons\">\r\n            <div>\r\n              <a onClick={this.onClickEdit} href=\"#\">\r\n                <i className=\"fa fa-pen\"></i>\r\n              </a>\r\n            </div>\r\n            <div>\r\n              <a onClick={this.onClickRemove} href=\"#\">\r\n                <i className=\"fa fa-times\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nexport default class ItemList extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.items.map(item => (\r\n          <Item {...this.props} key={item.id} item={item} />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, PropTypes } from \"react\";\r\n\r\nimport ItemForm from \"./ItemForm\";\r\nimport ItemList from \"./ItemList\";\r\n\r\nclass Todos extends Component {\r\n  static propTypes = {\r\n    items: PropTypes.array.isRequired\r\n  };\r\n\r\n  onNewItemSubmited = item => {\r\n    this.props.addItem(item);\r\n  };\r\n\r\n  onEditItemSubmited = item => {\r\n    this.props.editItem(item);\r\n  };\r\n\r\n  toggleItemCompletion = id => {\r\n    this.props.dispatch({\r\n      type: \"TOGGLE_ITEM_COMPLETION\",\r\n      id: id\r\n    });\r\n  };\r\n\r\n  startEditItem = id => {\r\n    this.props.dispatch({\r\n      type: \"START_EDIT_ITEM\",\r\n      id: id\r\n    });\r\n  };\r\n\r\n  removeItem = id => {\r\n    this.props.removeItem(id);\r\n  };\r\n\r\n  render() {\r\n    const editItem = this.props.items.filter(item => {\r\n      return item.id === this.props.activeEditItemId;\r\n    })[0];\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <ItemForm\r\n            onNewItemSubmited={this.onNewItemSubmited}\r\n            onEditItemSubmited={this.onEditItemSubmited}\r\n            editItem={editItem}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ItemList\r\n            items={this.props.items}\r\n            onToggleComplete={this.toggleItemCompletion}\r\n            onEditItem={this.startEditItem}\r\n            onRemoveItem={this.removeItem}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todos;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport * as actionCreators from \"../../actions\";\r\nimport Todo from \"../../components/Todos\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    items: state.todos,\r\n    activeEditItemId: state.activeEditItemId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    dispatch,\r\n    addItem: item => dispatch(actionCreators.addItem(item)),\r\n    editItem: item => dispatch(actionCreators.doEditItem(item)),\r\n    removeItem: item => dispatch(actionCreators.removeItem(item))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Todo);\r\n","// Action creator\r\n\r\nexport const addItem = item => {\r\n  return {\r\n    type: \"ADD_NEW_ITEM\",\r\n    item\r\n  };\r\n};\r\n\r\nexport const startEditingItem = () => {\r\n  return {\r\n    type: \"START_EDITING_ITEM\"\r\n  };\r\n};\r\n\r\nexport const finishEditItem = () => {\r\n  return {\r\n    type: \"FINISH_EDIT_ITEM\"\r\n  };\r\n};\r\n\r\nexport const editItem = item => {\r\n  return { type: \"EDIT_ITEM\", item };\r\n};\r\n\r\nexport const doEditItem = item => {\r\n  return dispatch => {\r\n    dispatch(startEditingItem());\r\n    dispatch(editItem(item));\r\n    dispatch(finishEditItem());\r\n  };\r\n};\r\n\r\nexport const removeItem = id => {\r\n  return {\r\n    type: \"REMOVE_ITEM\",\r\n    id\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport Todos from \"../containers/Todo\";\r\nimport \"./App.css\";\r\n\r\nconst today = new Date();\r\nconst options = {\r\n  weekday: \"long\",\r\n  month: \"long\",\r\n  day: \"numeric\"\r\n};\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"app\">\r\n          <div className=\"app-header\">\r\n            <h1>ToDo List</h1>\r\n            <p>{today.toLocaleDateString(\"en-US\", options)}</p>\r\n          </div>\r\n          <div className=\"newdiv\">\r\n            <Todos />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./store\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { combineReducers } from \"redux\";\r\n\r\nconst itemsReducer = (\r\n  state = [{ id: 1, description: \"My Task\", completed: true }],\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"ADD_NEW_ITEM\":\r\n      //Fixes a bug where duplicate keys were being generated\r\n      //Finds the highest key value and adds 1\r\n      let maxID = Math.max.apply(\r\n        Math,\r\n        state.map(data => data.id)\r\n      );\r\n\r\n      if (maxID === -Infinity) {\r\n        maxID = 1;\r\n      }\r\n\r\n      return [...state, { ...action.item, id: maxID + 1 }];\r\n\r\n    case \"REMOVE_ITEM\":\r\n      return state.filter(item => {\r\n        return item.id !== action.id;\r\n      });\r\n    case \"EDIT_ITEM\":\r\n      return state.map(item => {\r\n        if (item.id === action.item.id) {\r\n          return { ...item, description: action.item.description };\r\n        }\r\n        return item;\r\n      });\r\n    case \"TOGGLE_ITEM_COMPLETION\":\r\n      return state.map(item => {\r\n        if (item.id === action.id) {\r\n          return { ...item, completed: !item.completed };\r\n        }\r\n        return item;\r\n      });\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst activeEditItemId = (state = null, action) => {\r\n  switch (action.type) {\r\n    case \"START_EDIT_ITEM\":\r\n      return action.id;\r\n    case \"FINISH_EDIT_ITEM\":\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  todos: itemsReducer,\r\n  activeEditItemId\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport reducers from \"../reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n"],"sourceRoot":""}